{"ast":null,"code":"var _jsxFileName = \"/Users/han/\\u7F16\\u7A0B/to-do-list-github/to-do-list-Hanbing/frontend/src/components/modals/EditItemModal.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport AddItemButtons from './modalButtons/AddItemButtons';\nimport { AuthContext } from '../../context/AuthContext';\nimport './EditItemModal.css';\n\nconst EditItemModal = props => {\n  const auth = useContext(AuthContext);\n  const token = auth.token;\n  const userId = props.userId;\n  const itemId = props.itemId;\n  const prevTaskName = props.taskName;\n  const prevTag = props.tag; // const response;\n\n  const [error, setError] = useState(null);\n  const [inputData, setInputData] = useState({\n    taskName: '',\n    taskDate: undefined,\n    taskTag: ''\n  });\n\n  const inputChangeHandler = event => {\n    const value = event.target.value;\n    setInputData({ ...inputData,\n      [event.target.name]: value\n    });\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    console.log(inputData);\n    props.onChange();\n\n    try {\n      const response = await fetch(`http://localhost:5000/api/items/${userId}/${itemId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        Authorization: \"Bearer \" + auth.token,\n        body: JSON.stringify({\n          title: inputData.taskName,\n          date: inputData.taskDate,\n          tags: [{\n            name: inputData.taskTag\n          }]\n        })\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n      props.onClose();\n      alert('Item successfully edited');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const content = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editItemModal__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Edit your task\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"editItemForm\",\n    method: \"post\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editItemForm__taskNameContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"taskName\",\n    placeholder: prevTaskName,\n    value: inputData.taskName,\n    onChange: inputChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editItemForm__taskButtonsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"taskDate\",\n    value: inputData.taskDate,\n    onChange: inputChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskTag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"taskTag\",\n    placeholder: prevTag ? prevTag : 'Add a tag',\n    value: inputData.taskTag,\n    onChange: inputChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cancelTask editTaskButtonBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddItemButtons, {\n    onClick: props.onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addTask addTaskButtonBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddItemButtons, {\n    inverse: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Update Item\")))));\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nexport default EditItemModal;","map":{"version":3,"sources":["/Users/han/编程/to-do-list-github/to-do-list-Hanbing/frontend/src/components/modals/EditItemModal.js"],"names":["React","useState","useContext","useEffect","ReactDOM","AddItemButtons","AuthContext","EditItemModal","props","auth","token","userId","itemId","prevTaskName","taskName","prevTag","tag","error","setError","inputData","setInputData","taskDate","undefined","taskTag","inputChangeHandler","event","value","target","name","submitHandler","preventDefault","console","log","onChange","response","fetch","method","headers","Authorization","body","JSON","stringify","title","date","tags","responseData","json","onClose","alert","err","content","createPortal","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AddItemButtons from './modalButtons/AddItemButtons';\nimport { AuthContext } from '../../context/AuthContext';\n\n\nimport './EditItemModal.css';\n\n\n\nconst EditItemModal = props =>{\n    const auth = useContext(AuthContext);\n    const token = auth.token\n    const userId = props.userId;\n    const itemId = props.itemId;\n    const prevTaskName = props.taskName;\n    const prevTag = props.tag;\n    // const response;\n    \n\n    const [error, setError] = useState(null);\n    \n    const [inputData, setInputData] = useState({\n        taskName: '', \n        taskDate: undefined,\n        taskTag: ''\n      });\n   \n      const inputChangeHandler =(event)=>{\n        const value = event.target.value\n        setInputData({ \n          ...inputData,\n          [event.target.name]: value\n    \n        })}\n  \n\n    \n\n\n    const submitHandler = async (event) =>{\n        event.preventDefault();\n        console.log(inputData);\n        props.onChange()\n        \n\n    try{\n        const response = await fetch( `http://localhost:5000/api/items/${userId}/${itemId}`, {\n        method: 'PATCH', \n        headers: {\n          'Content-Type': 'application/json'\n        }, \n        Authorization: \"Bearer \" + auth.token,\n        body: JSON.stringify({\n          title: inputData.taskName, \n          date: inputData.taskDate,\n          tags: [{name: inputData.taskTag}]\n\n        })\n      })\n\n      const responseData= await response.json();\n      console.log(responseData)\n\n    props.onClose()\n    alert('Item successfully edited')\n   \n    }catch(err){\n      console.log(err)\n\n    }  }\n\n    const content = (\n\n        <div className=\"editItemModal__container\">\n            <h3>Edit your task</h3>\n             <form className='editItemForm' method='post' onSubmit={submitHandler}>\n                <div className='editItemForm__taskNameContainer'>\n                    <input type =\"text\" name='taskName' placeholder={prevTaskName} \n                    value = {inputData.taskName} onChange={inputChangeHandler}/>\n                </div>\n            <div className='editItemForm__taskButtonsContainer'>\n                <div className='taskDate'>\n                    <input type =\"date\" name='taskDate' \n                     value = {inputData.taskDate} onChange={inputChangeHandler}/>\n                </div>\n                <div className='taskTag'>\n                    <input type =\"text\" name='taskTag' placeholder={prevTag?prevTag:'Add a tag'} \n                     value = {inputData.taskTag} onChange={inputChangeHandler}/>\n                </div>\n                \n                <div className='cancelTask editTaskButtonBox'>\n                    <AddItemButtons onClick = {props.onClose}  >\n                    Cancel\n                    </AddItemButtons >\n                </div>\n                <div className='addTask addTaskButtonBox'>\n                    <AddItemButtons inverse type='submit'>\n                    Update Item\n                    </AddItemButtons>\n                </div>\n                </div>\n      \n        </form>\n    </div>\n        \n    )\n\n\n    \n    \n\n\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n     \n\n   \n}\n\n\nexport default EditItemModal;"]},"metadata":{},"sourceType":"module"}