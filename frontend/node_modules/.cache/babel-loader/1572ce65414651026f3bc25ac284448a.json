{"ast":null,"code":"var _jsxFileName = \"/Users/han/\\u7F16\\u7A0B/to-do-list-github/to-do-list-Hanbing/frontend/src/App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/navBar/NavBar';\nimport MainPage from './components/mainPage/MainPage';\nimport SearchResult from './components/mainPage/SearchResult';\nimport { AuthContext } from './context/AuthContext';\nimport { SearchContext } from './context/SearchContext';\nimport { useAuth } from './hooks/auth-hook';\n\nfunction App() {\n  const {\n    token,\n    login,\n    logout,\n    userId\n  } = useAuth();\n  const [searchInputValue, setSearchInputValue] = useState(null);\n  let routes;\n\n  if (token) {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MainPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/search\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchResult, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: !!token,\n      token: token,\n      userId: userId,\n      login: login,\n      logout: logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchContext.Provider, {\n    value: {\n      searchInput: searchInputValue,\n      searchInputHandler: setSearchInputValue\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, routes))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/han/编程/to-do-list-github/to-do-list-Hanbing/frontend/src/App.js"],"names":["React","useState","useEffect","useCallback","BrowserRouter","Router","Route","Switch","Redirect","NavBar","MainPage","SearchResult","AuthContext","SearchContext","useAuth","App","token","login","logout","userId","searchInputValue","setSearchInputValue","routes","isLoggedIn","searchInput","searchInputHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAiE,kBAAjE;AAEA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AAGA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AAEA,SAASC,OAAT,QAAwB,mBAAxB;;AAIA,SAASC,GAAT,GAAe;AAEb,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAmCL,OAAO,EAAhD;AAEA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA2CpB,QAAQ,CAAC,IAAD,CAAzD;AAEA,MAAIqB,MAAJ;;AAEA,MAAGN,KAAH,EAAS;AACPM,IAAAA,MAAM,gBACJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,eAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,KAAK,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJJ,CADF;AAUD;;AAID,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAE,CAAC,CAACP,KADR;AAENA,MAAAA,KAAK,EAAEA,KAFD;AAGNG,MAAAA,MAAM,EAAEA,MAHF;AAINF,MAAAA,KAAK,EAAEA,KAJD;AAKNC,MAAAA,MAAM,EAAEA;AALF,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,aAAD,CAAe,QAAf;AACA,IAAA,KAAK,EAAE;AACLM,MAAAA,WAAW,EAACJ,gBADP;AAELK,MAAAA,kBAAkB,EAAEJ;AAFf,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANE,eAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,MAAP,CAPE,CATF,CADF,CADF;AAwBD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport './App.css';\n\nimport NavBar from './components/navBar/NavBar';\nimport MainPage from './components/mainPage/MainPage';\nimport SearchResult from './components/mainPage/SearchResult'\n\n\nimport { AuthContext } from './context/AuthContext';\nimport { SearchContext } from './context/SearchContext';\n\nimport { useAuth } from './hooks/auth-hook'\n\n\n\nfunction App() {\n\n  const { token, login, logout, userId } = useAuth();\n\n  const [searchInputValue, setSearchInputValue ] = useState(null);\n\n  let routes;\n\n  if(token){\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n            <MainPage />\n         </Route>\n          <Route path=\"/search\" exact>\n            <SearchResult />\n       </Route>\n     </Switch>\n    )\n  }\n\n\n\n  return (\n    <Router>\n      <AuthContext.Provider \n       value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n      >\n        <SearchContext.Provider\n        value={{\n          searchInput:searchInputValue,\n          searchInputHandler: setSearchInputValue\n        }}\n      >\n      <NavBar />\n      <main>{routes}</main>    \n      </SearchContext.Provider>\n      </AuthContext.Provider>\n    </Router>\n   \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}