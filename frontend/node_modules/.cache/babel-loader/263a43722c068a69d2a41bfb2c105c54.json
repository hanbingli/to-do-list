{"ast":null,"code":"var _jsxFileName = \"/Users/han/\\u7F16\\u7A0B/to-do-list-github/to-do-list-Hanbing/frontend/src/components/mainPage/SearchResult.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport { SearchContext } from '../../context/SearchContext';\nimport List from './List/List';\nimport './MainPage.css';\n\nconst SearchResult = props => {\n  const auth = useContext(AuthContext);\n  const userId = auth.userId;\n  const {\n    searchInput,\n    searchInputHandler\n  } = useContext(SearchContext);\n  console.log(searchInput);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [searchResult, setSearchResult] = useState([]);\n\n  const itemDeleteHandler = deletedItemId => {\n    setSearchResult(prevItems => {\n      prevItems.filter(i => i._id !== deletedItemId);\n    });\n  };\n\n  useEffect(() => {\n    const searchItems = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/items/${userId}/search`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          Authorization: \"Bearer \" + auth.token,\n          body: JSON.stringify({\n            keyword: searchInput\n          })\n        });\n        const responseData = await response.json();\n        console.log(responseData);\n        setSearchResult(responseData.items); // const responseData = await sendRequest(\n        //   `http://localhost:5000/api/items/${userId}/search`,\n        //   'GET',\n        //   {\n        //     body: JSON.stringify({\n        //       keyword: searchInput\n        //     })\n        //   },\n        //   {\n        //     Authorization: 'Bearer ' + auth.token,\n        //   }\n        // );\n        // setSearchResult(responseData.items);\n        // console.log(responseData)\n        // console.log(searchResult)\n      } catch (err) {}\n    };\n\n    searchItems();\n  }, [sendRequest, searchInput]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainContainerOuterBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchListContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, searchResult && /*#__PURE__*/React.createElement(List, {\n    className: \"List\",\n    items: searchResult,\n    onDeleteItem: itemDeleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/Users/han/编程/to-do-list-github/to-do-list-Hanbing/frontend/src/components/mainPage/SearchResult.js"],"names":["React","useState","useContext","useEffect","AuthContext","useHttpClient","SearchContext","List","SearchResult","props","auth","userId","searchInput","searchInputHandler","console","log","isLoading","error","sendRequest","clearError","searchResult","setSearchResult","itemDeleteHandler","deletedItemId","prevItems","filter","i","_id","searchItems","response","fetch","method","headers","Authorization","token","body","JSON","stringify","keyword","responseData","json","items","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,gBAAP;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE9B,QAAMC,IAAI,GAAGR,UAAU,CAACE,WAAD,CAAvB;AACA,QAAMO,MAAM,GAAGD,IAAI,CAACC,MAApB;AACA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAsCX,UAAU,CAACI,aAAD,CAAtD;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAAgDd,aAAa,EAAnE;AAEA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAMqB,iBAAiB,GAAIC,aAAD,IAAmB;AAC3CF,IAAAA,eAAe,CAAEG,SAAD,IAAe;AAC7BA,MAAAA,SAAS,CAACC,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUJ,aAAhC;AACD,KAFc,CAAf;AAGD,GAJD;;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,WAAW,GAAG,YAAY;AAE9B,UAAI;AAEF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAG,mCAAkCnB,MAAO,SAA5C,EAAsD;AAClFoB,UAAAA,MAAM,EAAE,KAD0E;AAElFC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT,WAFyE;AAKlFC,UAAAA,aAAa,EAAE,YAAYvB,IAAI,CAACwB,KALkD;AAMlFC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,OAAO,EAAE1B;AADU,WAAf;AAN4E,SAAtD,CAA5B;AAYF,cAAM2B,YAAY,GAAE,MAAMV,QAAQ,CAACW,IAAT,EAA1B;AACA1B,QAAAA,OAAO,CAACC,GAAR,CAAYwB,YAAZ;AACAlB,QAAAA,eAAe,CAACkB,YAAY,CAACE,KAAd,CAAf,CAhBI,CAqBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OApCD,CAoCE,OAAOC,GAAP,EAAY,CAAG;AAClB,KAvCD;;AAyCAd,IAAAA,WAAW;AAEZ,GA5CQ,EA4CN,CAACV,WAAD,EAAcN,WAAd,CA5CM,CAAT;AA8CA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGQ,YAAY,iBACX,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAEA,YAA9B;AAA4C,IAAA,YAAY,EAAEE,iBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF,CADF;AAcD,CA9ED;;AAqFA,eAAed,YAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\n\nimport { AuthContext } from '../../context/AuthContext';\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport { SearchContext } from '../../context/SearchContext';\nimport List from './List/List';\nimport './MainPage.css'\n\nconst SearchResult = (props) => {\n\n  const auth = useContext(AuthContext);\n  const userId = auth.userId;\n  const { searchInput, searchInputHandler } = useContext(SearchContext);\n  console.log(searchInput)\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n \n  const [searchResult, setSearchResult] = useState([]);\n \n\n  const itemDeleteHandler = (deletedItemId) => {\n    setSearchResult((prevItems) => {\n      prevItems.filter(i => i._id !== deletedItemId)\n    })\n  }\n\n  useEffect(() => {\n    const searchItems = async () => {\n\n      try {\n\n        const response = await fetch( `http://localhost:5000/api/items/${userId}/search`, {\n        method: 'GET', \n        headers: {\n          'Content-Type': 'application/json'\n        }, \n        Authorization: \"Bearer \" + auth.token,\n        body: JSON.stringify({\n          keyword: searchInput\n\n        })\n      })\n\n      const responseData= await response.json();\n      console.log(responseData)\n      setSearchResult(responseData.items)\n\n\n\n\n        // const responseData = await sendRequest(\n        //   `http://localhost:5000/api/items/${userId}/search`,\n        //   'GET',\n        //   {\n        //     body: JSON.stringify({\n        //       keyword: searchInput\n        //     })\n        //   },\n        //   {\n        //     Authorization: 'Bearer ' + auth.token,\n        //   }\n        // );\n        // setSearchResult(responseData.items);\n        // console.log(responseData)\n        // console.log(searchResult)\n      } catch (err) { }\n    };\n\n    searchItems()\n\n  }, [sendRequest, searchInput]);\n\n  return (\n    <div className='mainContainerOuterBox'>\n      <div className='searchListContainer'>\n        {/* <button onClick={searchItems}>button</button> */}\n        {searchResult && (\n          <List className='List' items={searchResult} onDeleteItem={itemDeleteHandler} />\n        )}\n      </div>\n    </div>\n\n  )\n\n\n\n}\n\n\n\n\n\n\nexport default SearchResult;"]},"metadata":{},"sourceType":"module"}