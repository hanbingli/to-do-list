{"ast":null,"code":"var _jsxFileName = \"/Users/han/\\u7F16\\u7A0B/postgraduate/tv2z/to-do-list-Hanbing/backend/frontend/src/components/modals/AddItemModal.js\";\nimport React, { useState, useContext } from 'react';\nimport AddItemButtons from './modalButtons/AddItemButtons';\nimport { AuthContext } from '../../context/AuthContext';\nimport AddTagModal from './AddTagModal';\nimport './AddItemModal.css';\nimport { set } from 'mongoose';\n\nconst AddItemModal = props => {\n  const auth = useContext(AuthContext);\n  const userId = auth.userId;\n  const token = auth.token;\n  const [error, setError] = useState(null);\n  const [addTagModalOpen, setAddTagModalOpen] = useState(false);\n  const [tags, setTags] = useState([]);\n\n  const openAddTagModal = () => {\n    setAddTagModalOpen(true);\n  };\n\n  const closeAddTagModal = () => {\n    setAddTagModalOpen(false);\n  };\n\n  const [inputData, setInputData] = useState({\n    taskName: '',\n    taskDate: undefined,\n    tags: []\n  });\n\n  const addTagHandler = props => {\n    const addedTags = tags.push(props);\n    setTags(addedTags);\n  };\n\n  const inputChangeHandler = event => {\n    const value = event.target.value;\n    setInputData({ ...inputData,\n      [event.target.name]: value\n    });\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    console.log(inputData);\n    console.log(userId);\n    console.log(token);\n\n    try {\n      const response = await fetch(`http://localhost:5000/api/items/${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        Authorization: \"Bearer \" + auth.token,\n        body: JSON.stringify({\n          title: inputData.taskName,\n          date: inputData.taskDate,\n          tags: inputData.taskTag\n        })\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n      props.switch();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, addTagModalOpen && /*#__PURE__*/React.createElement(AddTagModal, {\n    submit: addTagHandler,\n    close: closeAddTagModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addItemModal__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"addItemForm\",\n    method: \"post\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addItemForm__taskNameContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"taskName\",\n    placeholder: \"Add a task\",\n    value: inputData.taskName,\n    onChange: inputChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addItemForm__taskButtonsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"taskDate\",\n    value: inputData.taskDate,\n    onChange: inputChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskTag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"taskTag\",\n    placeholder: \"Add a tag\",\n    value: inputData.taskTag,\n    onChange: inputChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cancelTask addTaskButtonBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AddItemButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addTask addTaskButtonBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AddItemButtons, {\n    inverse: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, \"Add Task\"))))));\n};\n\nexport default AddItemModal;","map":{"version":3,"sources":["/Users/han/编程/postgraduate/tv2z/to-do-list-Hanbing/backend/frontend/src/components/modals/AddItemModal.js"],"names":["React","useState","useContext","AddItemButtons","AuthContext","AddTagModal","set","AddItemModal","props","auth","userId","token","error","setError","addTagModalOpen","setAddTagModalOpen","tags","setTags","openAddTagModal","closeAddTagModal","inputData","setInputData","taskName","taskDate","undefined","addTagHandler","addedTags","push","inputChangeHandler","event","value","target","name","submitHandler","preventDefault","console","log","response","fetch","method","headers","Authorization","body","JSON","stringify","title","date","taskTag","responseData","json","switch","err"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport AddItemButtons from './modalButtons/AddItemButtons';\nimport { AuthContext } from '../../context/AuthContext';\nimport AddTagModal from './AddTagModal';\n\n\nimport './AddItemModal.css';\nimport { set } from 'mongoose';\n\n\nconst AddItemModal = props =>{\n    const auth = useContext(AuthContext);\n    const userId = auth.userId;\n    const token = auth.token\n\n\n    const [error, setError] = useState(null);\n    const [addTagModalOpen, setAddTagModalOpen] = useState(false);\n    const [tags, setTags] = useState([]);\n\n    const openAddTagModal = () =>{\n      setAddTagModalOpen(true)\n    };\n\n    const closeAddTagModal = () =>{\n      setAddTagModalOpen(false)\n    }\n\n    \n    const [inputData, setInputData] = useState({\n        taskName: '', \n        taskDate: undefined,\n        tags: []\n\n      });\n\n      const addTagHandler = (props) =>{\n        const addedTags = tags.push(props)\n        setTags(addedTags);\n      }\n    \n    \n      const inputChangeHandler =(event)=>{\n        const value = event.target.value\n        setInputData({ \n          ...inputData,\n          [event.target.name]: value\n    \n        })\n    };\n\n    const submitHandler = async (event) =>{\n        event.preventDefault();\n        console.log(inputData);\n        console.log(userId);\n        console.log(token);\n\n    try{\n        const response = await fetch( `http://localhost:5000/api/items/${userId}`, {\n        method: 'POST', \n        headers: {\n          'Content-Type': 'application/json'\n        }, \n        Authorization: \"Bearer \" + auth.token,\n        body: JSON.stringify({\n          title: inputData.taskName, \n          date: inputData.taskDate,\n          tags: inputData.taskTag,\n\n        })\n      })\n\n      const responseData= await response.json();\n      console.log(responseData)\n\n    props.switch()\n   \n    }catch(err){\n      console.log(err)\n\n    }\n\n\n    \n      }\n\n    return (\n      <React.Fragment>\n        {addTagModalOpen && <AddTagModal submit = {addTagHandler} close={closeAddTagModal}  />}\n\n            <div className=\"addItemModal__container\">\n                <form className='addItemForm' method='post' onSubmit={submitHandler}>\n                    <div className='addItemForm__taskNameContainer'>\n                        <input type =\"text\" name='taskName' placeholder='Add a task' \n                         value = {inputData.taskName} onChange={inputChangeHandler}/>\n                    </div>\n                    <div className='addItemForm__taskButtonsContainer'>\n                        <div className='taskDate'>\n                            <input type =\"date\" name='taskDate' \n                             value = {inputData.taskDate} onChange={inputChangeHandler}/>\n                        </div>\n                        <div className='taskTag'>\n                            <input type =\"text\" name='taskTag' placeholder='Add a tag' \n                             value = {inputData.taskTag} onChange={inputChangeHandler}/>\n                        </div>\n                        {/* <div className='addTag addTaskButtonBox' >\n                            <AddItemButtons onClick= {openAddTagModal} >\n                                Add a Tag\n                            </AddItemButtons>\n                        </div> */}\n                        <div className='cancelTask addTaskButtonBox'>\n                            <AddItemButtons >\n                            Cancel\n                            </AddItemButtons >\n                        </div>\n                        <div className='addTask addTaskButtonBox'>\n                            <AddItemButtons inverse type='submit'>\n                            Add Task\n                            </AddItemButtons>\n                        </div>\n                    </div>\n                    \n                \n                </form>\n            </div>\n            </React.Fragment>\n\n    )\n   \n}\n\n\nexport default AddItemModal;"]},"metadata":{},"sourceType":"module"}