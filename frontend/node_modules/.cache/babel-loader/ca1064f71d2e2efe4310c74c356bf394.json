{"ast":null,"code":"var _jsxFileName = \"/Users/han/\\u7F16\\u7A0B/to-do-list-github/to-do-list-Hanbing/frontend/src/components/modals/RegisterModal.js\";\nimport React, { useState } from 'react';\nimport Input from '../form/Input';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './RegisterModal.css';\n\nconst RegisterModal = props => {\n  const [error, setError] = useState(null);\n  const [inputData, setInputData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n\n  const inputChangeHandler = event => {\n    const value = event.target.value;\n    setInputData({ ...inputData,\n      [event.target.name]: value\n    });\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    console.log(inputData);\n\n    try {\n      const response = await fetch('http://localhost:5000/api/users/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: inputData.name,\n          email: inputData.email,\n          password: inputData.password\n        })\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n      props.switch();\n      alert('Sign up successfully, please turn to login');\n    } catch (err) {\n      console.log(err);\n      setError(err.message || 'Something went wrong, please try again');\n      alert(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"registerModal__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"registerModal__form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), \")}\", !isLoginMode && /*#__PURE__*/React.createElement(ImageUpload, {\n    center: true,\n    id: \"image\",\n    onInput: inputHandler,\n    errorText: \"Please provide an image.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password, at least 6 characters.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"registerSubmitButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\n\nexport default RegisterModal;","map":{"version":3,"sources":["/Users/han/编程/to-do-list-github/to-do-list-Hanbing/frontend/src/components/modals/RegisterModal.js"],"names":["React","useState","Input","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","RegisterModal","props","error","setError","inputData","setInputData","name","email","password","inputChangeHandler","event","value","target","submitHandler","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","responseData","json","switch","alert","err","message","inputHandler","isLoginMode"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport Input from '../form/Input'\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\n\n\n\nimport './RegisterModal.css';\n\nconst RegisterModal = props => {\n\n  const [error, setError] = useState(null)\n\n  const [inputData, setInputData] = useState({\n    name:'',\n    email: '', \n    password:''\n  })\n\n  const inputChangeHandler =(event)=>{\n    const value = event.target.value\n    setInputData({ \n      ...inputData,\n      [event.target.name]: value\n\n    });\n  }\n\n  const submitHandler = async (event) =>{\n    event.preventDefault();\n    console.log(inputData)\n\n    try{\n      const response = await fetch('http://localhost:5000/api/users/signup', {\n        method: 'POST', \n        headers: {\n          'Content-Type': 'application/json'\n        }, \n        body: JSON.stringify({\n          name: inputData.name, \n          email: inputData.email, \n          password: inputData.password\n        })\n      })\n\n      const responseData= await response.json();\n      \n      console.log(responseData)\n      props.switch()\n      alert('Sign up successfully, please turn to login')\n\n    }catch(err){\n      console.log(err);\n      setError(err.message || 'Something went wrong, please try again')\n      alert(err.message)\n\n\n    }\n\n   \n\n  }\n\n\n    return (\n        <div className='registerModal__container'>\n       <h1>Register</h1>\n        <form className ='registerModal__form'\n         onSubmit={submitHandler}\n        >\n          <Input\n\t\t\t\t\t\t\telement=\"input\"\n\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tlabel=\"Your Name\"\n\t\t\t\t\t\t\tvalidators={[ VALIDATOR_REQUIRE() ]}\n\t\t\t\t\t\t\terrorText=\"Please enter a name.\"\n\t\t\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isLoginMode && (\n\t\t\t\t\t\t<ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image.\" />\n\t\t\t\t\t)}\n\t\t\t\t\t<Input\n\t\t\t\t\t\telement=\"input\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tlabel=\"E-Mail\"\n\t\t\t\t\t\tvalidators={[ VALIDATOR_EMAIL() ]}\n\t\t\t\t\t\terrorText=\"Please enter a valid email address.\"\n\t\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\telement=\"input\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tvalidators={[ VALIDATOR_MINLENGTH(6) ]}\n\t\t\t\t\t\terrorText=\"Please enter a valid password, at least 6 characters.\"\n\t\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t\t/>\n\n          {/* <div className='field field_name'>   \n            <label className='label' for='name'>Name</label>   \n            <input type='text' name='name' class='input input_name' \n            value = {inputData.name} onChange={inputChangeHandler}/>\n        </div>\n         <div className='field field_email'>   \n            <label className='label' for='email'>Email</label>   \n            <input type='email' name='email' class='input input_email'\n            value = {inputData.email} onChange={inputChangeHandler}/>\n        </div>\n        <div className='field field_password'>   \n            <label class='label' for='password'>Password</label>   \n            <input type='password' name='password' class='input input_password'\n            value = {inputData.password} onChange={inputChangeHandler}/>\n        </div> */}\n\n        <button type=\"submit\" className='registerSubmitButton'>Register</button>\n        </form>\n      </div>\n \n    );\n  };\n\nexport default RegisterModal;"]},"metadata":{},"sourceType":"module"}